1) Нам необходимо проверить существует ли тот или иной файл. Для этого мы воспользуемся функцией file_exists().

<?php
myfile("counter.txt"); // Используем функцию myfile, передав в качестве аргумента имя файла 

function myfile($name) //Создаем функцию для проверки существования файла
{
if (file_exists($name)) echo 'Файл существует';
else echo "Файл не существует";
}
?>
Примечание: Функция file_exists не производит проверку файлов на удаленном веб-сервере. Для правильной работы функции, файл со скриптом должен находиться на том сервере, где и проверяемый файл.

2) Определяем размер файла с помощью функции filesize()

<?php
myfile("counter.txt"); 

function myfile($name) //Создаем функцию для проверки существования файла и определения размера файла
{
if (file_exists($name)) echo "Размер файла: ".filesize($name).' байт';
else echo "Файл не существует";
}
?>
3) Создание временного файла с помощью функции tmpfile()

<?php
$myfile = tmpfile();
fwrite($myfile, "Эта строка записывается во временный файл."); // Записываем во временный файл
fseek($myfile, 0); // Устанавливаем указатель файла
echo fread($myfile, 1024); // выводим содержимое файла
?>
4) Вам необходимо определить количество строк в файле. Для этого используем функцию count()

<?php
$fp = file("counter.txt");
echo 'Количество строк в файле: '.count($fp);
?>
5) Нам необходимо использовать механизм блокировки файла

<?php
$fp = fopen("counter.txt", 'a');
flock($fp, LOCK_EX); // Блокирование файла для записи
fwrite($fp, "Строка для записи");
flock($fp, LOCK_UN); // Снятие блокировки
fclose($fp);
?>
6) Нам необходимо удалить определенную строку из файла

<?php
$num_stroka = 5; //Удалим 5 строку из файла
$file = file("counter.txt"); // Считываем весь файл в массив 

for($i = 0; $i < sizeof($file); $i++)
if($i == $num_stroka) unset($file[$i]); 

$fp = fopen("counter.txt", "w");
fputs($fp, implode("", $file));
fclose($fp);
?>
7) Определение типа файла. Используем функцию filetype(), которая принимает единственный параметр

<?php
$mytype = filetype("counter.txt");
echo "Тип файла: ".$mytype;
?>
После вызова строка может содержат одно из следующих значений:

file – обычный файл
dir – каталог
ink – символическая ссылка
fifo – fifo-канал
block – блочно - ориентированное устройство
char – символьно - ориентированное устройство
unknown – неизвестный тип файла
8) Если вы хотите просмотреть все параметры файла, то следует воспользоваться функцией stat()

<?php
$filename = stat("counter.txt");
echo "<pre>";
print_r($filename);
echo "</pre>";
?>
9) Нам необходимо очистить файл, используем функцию ftruncate()

<?php
$fp = fopen("counter.txt", 'a'); //Открываем файл в режиме записи
ftruncate($fp, 0) // очищаем файл
?>
10)  Нам необходимо узнать дату последнего изменения файла, используем функцию filectime(). Функция возвращает значение времени в форме Unix timestamp.

<?php
echo filectime("counter.txt");
?>

